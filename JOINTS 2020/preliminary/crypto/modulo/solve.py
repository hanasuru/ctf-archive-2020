from Crypto.Util.number import *
from sympy import mod_inverse
import gmpy2

e=65537
n=10277572973210015396114509978461325789039520167452352513097530812537233278537852490196789864637167280614241084537917733235253295152585036320818489868475070172597766108387993350187898664132706200120556785701810821247504895967464041760371571473198254204293024239267877707794812455671532243505668935576274263558055120021866999171395815271637724794082583348022955962360689735317321005185745471924366248556718703092964412182356953106514832707262112032472265570865929185813740802162994603820935899758111785169712710062618252648048232801502025921726453918958754082503428344577593706689456241538580051170410475901682919820407# p=28192232077998184059128571146756197845458783919207894277986357117363902629534763309539340436568588948727073098892045839458501536554671421653540894779132980157361184463046123718261106284555440299514630740042960138824162138218137342823777820823173951124298867737300580155323603309992627387670720320564086741636617960179992109509524148920856906186350556649117610770967075092824308105643925303740847347275422253550907143974811332645985260084004930358783912400435669933377114501253191432800004892509460707317078061115563569219075402757447973073273456048629840942293140200579518348442379577463432728994985382013420358876283
c=928275911495280878233815909920084423402719262079300930977142237817994193231554438316316475939418142333366565776214033703534465830348442270642257801182217119428463234934180907096908256558239813643277647034329491993041809306619046847087539974972875942795251492190811861493410878184764446806571790579633738403377900965609779466644144953713680980427485674727566769441063690190176893268450078739323138783974566362789760076860679089623512424443566284534695718818654248168555502218791006367813147058066044232602890520544620523160274576854875173007784069001701763114603967797076970250108458779239620170308547881669781949287
"""

q = mod_inverse(e,p)
q = e ** (-1) mod p
q * e = 1 mod p 
q * e = k * p + 1
q * q * e = q * (k * p + 1)
q^2*e=N*k+q
q^2*e-q-kN=0

q=(1+iroot(1+4*e*n*k, 2))/(2e)

"""

for k in range(1, 1000000):
	if gmpy2.iroot(1+4*e*n*k, 2)[1] == True:
		q = (1 + int(gmpy2.iroot(1+4*e*n*k, 2)[0]))/(2*e)
		if n % q == 0:
			factor = q
			print k
			print "q: ", q
			break
p = n/factor
assert p*q == n
phin = (p-1)*(q-1)
d = mod_inverse( e,phin)
print long_to_bytes(pow(c, d, n))